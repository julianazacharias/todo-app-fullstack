"""create users, tasks and locations table

Revision ID: 6aa9c6fffbe3
Revises: 
Create Date: 2024-12-11 18:46:51.709688

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from geoalchemy2 import Geometry
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6aa9c6fffbe3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('done', sa.Boolean(), nullable=False),
    sa.Column('priority', sa.Enum('high', 'medium', 'low', name='taskpriority'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_geospatial_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('place_id', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('lon', sa.Float(), nullable=False),
    sa.Column('geom', Geometry(geometry_type='POINT', srid=4326, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_geospatial_index('idx_locations_geom', 'locations', ['geom'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.drop_index('planet_osm_ways_nodes_idx', table_name='planet_osm_ways', postgresql_with={'fastupdate': 'off'}, postgresql_using='gin')
    op.drop_table('planet_osm_ways')
    op.drop_index('planet_osm_rels_parts_idx', table_name='planet_osm_rels', postgresql_with={'fastupdate': 'off'}, postgresql_using='gin')
    op.drop_table('planet_osm_rels')
    op.drop_table('planet_osm_nodes')
    op.drop_index('planet_osm_roads_osm_id_idx', table_name='planet_osm_roads')
    op.drop_geospatial_index('planet_osm_roads_way_idx', table_name='planet_osm_roads', postgresql_using='gist', column_name='way')
    op.drop_geospatial_table('planet_osm_roads')
    op.drop_index('planet_osm_polygon_osm_id_idx', table_name='planet_osm_polygon')
    op.drop_geospatial_index('planet_osm_polygon_way_idx', table_name='planet_osm_polygon', postgresql_using='gist', column_name='way')
    op.drop_geospatial_table('planet_osm_polygon')
    op.drop_index('planet_osm_point_osm_id_idx', table_name='planet_osm_point')
    op.drop_geospatial_index('planet_osm_point_way_idx', table_name='planet_osm_point', postgresql_using='gist', column_name='way')
    op.drop_geospatial_table('planet_osm_point')
    # op.drop_table('layer')
    op.drop_index('planet_osm_line_osm_id_idx', table_name='planet_osm_line')
    op.drop_geospatial_index('planet_osm_line_way_idx', table_name='planet_osm_line', postgresql_using='gist', column_name='way')
    op.drop_geospatial_table('planet_osm_line')
    # op.drop_table('topology')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('topology',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('topology_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('precision', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('hasz', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='topology_pkey'),
    sa.UniqueConstraint('name', name='topology_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_geospatial_table('planet_osm_line',
    sa.Column('osm_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('access', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('addr:housename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('addr:housenumber', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('addr:interpolation', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('admin_level', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('aerialway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('aeroway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('amenity', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('area', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('barrier', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('bicycle', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('brand', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('bridge', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('boundary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('building', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('construction', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('covered', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('culvert', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('cutting', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('denomination', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('disused', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('embankment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('foot', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('generator:source', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('harbour', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('highway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('historic', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('horse', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('intermittent', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('junction', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('landuse', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('layer', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('leisure', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('lock', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('man_made', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('military', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('motorcar', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('natural', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('office', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('oneway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('operator', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('place', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('population', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('power', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('power_source', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('public_transport', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('railway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ref', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('religion', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('route', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('service', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('shop', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sport', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('surface', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('toll', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tourism', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tower:type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tracktype', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tunnel', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('water', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('waterway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('wetland', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('width', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('wood', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('z_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('way_area', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.HSTORE(text_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('way', Geometry(geometry_type='LINESTRING', srid=4326, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True), autoincrement=False, nullable=True)
    )
    op.create_geospatial_index('planet_osm_line_way_idx', 'planet_osm_line', ['way'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_index('planet_osm_line_osm_id_idx', 'planet_osm_line', ['osm_id'], unique=False)
    op.create_table('layer',
    sa.Column('topology_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('layer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('schema_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('table_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('feature_column', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('feature_type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('level', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('child_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['topology_id'], ['topology.id'], name='layer_topology_id_fkey'),
    sa.PrimaryKeyConstraint('topology_id', 'layer_id', name='layer_pkey'),
    sa.UniqueConstraint('schema_name', 'table_name', 'feature_column', name='layer_schema_name_table_name_feature_column_key')
    )
    op.create_geospatial_table('planet_osm_point',
    sa.Column('osm_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('access', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('addr:housename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('addr:housenumber', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('addr:interpolation', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('admin_level', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('aerialway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('aeroway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('amenity', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('area', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('barrier', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('bicycle', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('brand', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('bridge', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('boundary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('building', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('capital', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('construction', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('covered', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('culvert', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('cutting', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('denomination', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('disused', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ele', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('embankment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('foot', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('generator:source', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('harbour', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('highway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('historic', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('horse', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('intermittent', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('junction', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('landuse', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('layer', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('leisure', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('lock', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('man_made', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('military', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('motorcar', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('natural', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('office', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('oneway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('operator', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('place', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('population', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('power', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('power_source', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('public_transport', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('railway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ref', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('religion', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('route', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('service', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('shop', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sport', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('surface', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('toll', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tourism', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tower:type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tunnel', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('water', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('waterway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('wetland', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('width', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('wood', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('z_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.HSTORE(text_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('way', Geometry(geometry_type='POINT', srid=4326, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True), autoincrement=False, nullable=True)
    )
    op.create_geospatial_index('planet_osm_point_way_idx', 'planet_osm_point', ['way'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_index('planet_osm_point_osm_id_idx', 'planet_osm_point', ['osm_id'], unique=False)
    op.create_geospatial_table('planet_osm_polygon',
    sa.Column('osm_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('access', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('addr:housename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('addr:housenumber', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('addr:interpolation', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('admin_level', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('aerialway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('aeroway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('amenity', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('area', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('barrier', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('bicycle', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('brand', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('bridge', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('boundary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('building', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('construction', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('covered', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('culvert', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('cutting', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('denomination', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('disused', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('embankment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('foot', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('generator:source', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('harbour', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('highway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('historic', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('horse', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('intermittent', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('junction', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('landuse', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('layer', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('leisure', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('lock', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('man_made', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('military', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('motorcar', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('natural', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('office', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('oneway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('operator', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('place', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('population', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('power', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('power_source', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('public_transport', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('railway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ref', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('religion', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('route', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('service', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('shop', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sport', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('surface', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('toll', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tourism', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tower:type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tracktype', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tunnel', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('water', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('waterway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('wetland', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('width', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('wood', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('z_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('way_area', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.HSTORE(text_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('way', Geometry(srid=4326, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True), autoincrement=False, nullable=True)
    )
    op.create_geospatial_index('planet_osm_polygon_way_idx', 'planet_osm_polygon', ['way'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_index('planet_osm_polygon_osm_id_idx', 'planet_osm_polygon', ['osm_id'], unique=False)
    op.create_geospatial_table('planet_osm_roads',
    sa.Column('osm_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('access', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('addr:housename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('addr:housenumber', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('addr:interpolation', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('admin_level', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('aerialway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('aeroway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('amenity', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('area', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('barrier', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('bicycle', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('brand', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('bridge', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('boundary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('building', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('construction', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('covered', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('culvert', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('cutting', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('denomination', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('disused', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('embankment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('foot', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('generator:source', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('harbour', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('highway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('historic', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('horse', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('intermittent', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('junction', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('landuse', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('layer', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('leisure', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('lock', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('man_made', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('military', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('motorcar', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('natural', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('office', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('oneway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('operator', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('place', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('population', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('power', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('power_source', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('public_transport', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('railway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ref', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('religion', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('route', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('service', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('shop', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sport', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('surface', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('toll', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tourism', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tower:type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tracktype', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tunnel', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('water', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('waterway', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('wetland', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('width', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('wood', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('z_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('way_area', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.HSTORE(text_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('way', Geometry(geometry_type='LINESTRING', srid=4326, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True), autoincrement=False, nullable=True)
    )
    op.create_geospatial_index('planet_osm_roads_way_idx', 'planet_osm_roads', ['way'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_index('planet_osm_roads_osm_id_idx', 'planet_osm_roads', ['osm_id'], unique=False)
    op.create_table('planet_osm_nodes',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('lat', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('lon', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='planet_osm_nodes_pkey')
    )
    op.create_table('planet_osm_rels',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('way_off', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('rel_off', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('parts', postgresql.ARRAY(sa.BIGINT()), autoincrement=False, nullable=True),
    sa.Column('members', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='planet_osm_rels_pkey')
    )
    op.create_index('planet_osm_rels_parts_idx', 'planet_osm_rels', ['parts'], unique=False, postgresql_with={'fastupdate': 'off'}, postgresql_using='gin')
    op.create_table('planet_osm_ways',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('nodes', postgresql.ARRAY(sa.BIGINT()), autoincrement=False, nullable=False),
    sa.Column('tags', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='planet_osm_ways_pkey')
    )
    op.create_index('planet_osm_ways_nodes_idx', 'planet_osm_ways', ['nodes'], unique=False, postgresql_with={'fastupdate': 'off'}, postgresql_using='gin')
    op.drop_geospatial_index('idx_locations_geom', table_name='locations', postgresql_using='gist', column_name='geom')
    op.drop_geospatial_table('locations')
    op.drop_table('tasks')
    op.drop_table('users')
    # ### end Alembic commands ###
